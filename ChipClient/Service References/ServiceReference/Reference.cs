//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.34014
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ChipClient.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Lesson", Namespace="http://schemas.datacontract.org/2004/07/Chip")]
    [System.SerializableAttribute()]
    public partial class Lesson : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LessonEndField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime LessonStartField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int NumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LessonEnd {
            get {
                return this.LessonEndField;
            }
            set {
                if ((this.LessonEndField.Equals(value) != true)) {
                    this.LessonEndField = value;
                    this.RaisePropertyChanged("LessonEnd");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime LessonStart {
            get {
                return this.LessonStartField;
            }
            set {
                if ((this.LessonStartField.Equals(value) != true)) {
                    this.LessonStartField = value;
                    this.RaisePropertyChanged("LessonStart");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Number {
            get {
                return this.NumberField;
            }
            set {
                if ((this.NumberField.Equals(value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Room", Namespace="http://schemas.datacontract.org/2004/07/Chip")]
    [System.SerializableAttribute()]
    public partial class Room : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Number {
            get {
                return this.NumberField;
            }
            set {
                if ((object.ReferenceEquals(this.NumberField, value) != true)) {
                    this.NumberField = value;
                    this.RaisePropertyChanged("Number");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Subject", Namespace="http://schemas.datacontract.org/2004/07/Chip")]
    [System.SerializableAttribute()]
    public partial class Subject : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Schedule", Namespace="http://schemas.datacontract.org/2004/07/Chip")]
    [System.SerializableAttribute()]
    public partial class Schedule : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DayOfWeek DayField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ChipClient.ServiceReference.Group GroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> GroupIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ChipClient.ServiceReference.ConcreteLesson[] LessonsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DayOfWeek Day {
            get {
                return this.DayField;
            }
            set {
                if ((this.DayField.Equals(value) != true)) {
                    this.DayField = value;
                    this.RaisePropertyChanged("Day");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChipClient.ServiceReference.Group Group {
            get {
                return this.GroupField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupField, value) != true)) {
                    this.GroupField = value;
                    this.RaisePropertyChanged("Group");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> GroupId {
            get {
                return this.GroupIdField;
            }
            set {
                if ((this.GroupIdField.Equals(value) != true)) {
                    this.GroupIdField = value;
                    this.RaisePropertyChanged("GroupId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChipClient.ServiceReference.ConcreteLesson[] Lessons {
            get {
                return this.LessonsField;
            }
            set {
                if ((object.ReferenceEquals(this.LessonsField, value) != true)) {
                    this.LessonsField = value;
                    this.RaisePropertyChanged("Lessons");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Group", Namespace="http://schemas.datacontract.org/2004/07/Chip")]
    [System.SerializableAttribute()]
    public partial class Group : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ConcreteLesson", Namespace="http://schemas.datacontract.org/2004/07/Chip")]
    [System.SerializableAttribute()]
    public partial class ConcreteLesson : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ChipClient.ServiceReference.Lesson LessonField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ChipClient.ServiceReference.Room RoomField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ChipClient.ServiceReference.Subject SubjectField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> SubjectIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private ChipClient.ServiceReference.Teacher TeacherField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> TeacherIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChipClient.ServiceReference.Lesson Lesson {
            get {
                return this.LessonField;
            }
            set {
                if ((object.ReferenceEquals(this.LessonField, value) != true)) {
                    this.LessonField = value;
                    this.RaisePropertyChanged("Lesson");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChipClient.ServiceReference.Room Room {
            get {
                return this.RoomField;
            }
            set {
                if ((object.ReferenceEquals(this.RoomField, value) != true)) {
                    this.RoomField = value;
                    this.RaisePropertyChanged("Room");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChipClient.ServiceReference.Subject Subject {
            get {
                return this.SubjectField;
            }
            set {
                if ((object.ReferenceEquals(this.SubjectField, value) != true)) {
                    this.SubjectField = value;
                    this.RaisePropertyChanged("Subject");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> SubjectId {
            get {
                return this.SubjectIdField;
            }
            set {
                if ((this.SubjectIdField.Equals(value) != true)) {
                    this.SubjectIdField = value;
                    this.RaisePropertyChanged("SubjectId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public ChipClient.ServiceReference.Teacher Teacher {
            get {
                return this.TeacherField;
            }
            set {
                if ((object.ReferenceEquals(this.TeacherField, value) != true)) {
                    this.TeacherField = value;
                    this.RaisePropertyChanged("Teacher");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> TeacherId {
            get {
                return this.TeacherIdField;
            }
            set {
                if ((this.TeacherIdField.Equals(value) != true)) {
                    this.TeacherIdField = value;
                    this.RaisePropertyChanged("TeacherId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Teacher", Namespace="http://schemas.datacontract.org/2004/07/Chip")]
    [System.SerializableAttribute()]
    public partial class Teacher : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PositionField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Position {
            get {
                return this.PositionField;
            }
            set {
                if ((object.ReferenceEquals(this.PositionField, value) != true)) {
                    this.PositionField = value;
                    this.RaisePropertyChanged("Position");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLessons", ReplyAction="http://tempuri.org/IService/GetLessonsResponse")]
        ChipClient.ServiceReference.Lesson[] GetLessons();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLessons", ReplyAction="http://tempuri.org/IService/GetLessonsResponse")]
        System.Threading.Tasks.Task<ChipClient.ServiceReference.Lesson[]> GetLessonsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetRooms", ReplyAction="http://tempuri.org/IService/GetRoomsResponse")]
        ChipClient.ServiceReference.Room[] GetRooms();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetRooms", ReplyAction="http://tempuri.org/IService/GetRoomsResponse")]
        System.Threading.Tasks.Task<ChipClient.ServiceReference.Room[]> GetRoomsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSubjects", ReplyAction="http://tempuri.org/IService/GetSubjectsResponse")]
        ChipClient.ServiceReference.Subject[] GetSubjects();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSubjects", ReplyAction="http://tempuri.org/IService/GetSubjectsResponse")]
        System.Threading.Tasks.Task<ChipClient.ServiceReference.Subject[]> GetSubjectsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSchedules", ReplyAction="http://tempuri.org/IService/GetSchedulesResponse")]
        ChipClient.ServiceReference.Schedule[] GetSchedules(int groupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSchedules", ReplyAction="http://tempuri.org/IService/GetSchedulesResponse")]
        System.Threading.Tasks.Task<ChipClient.ServiceReference.Schedule[]> GetSchedulesAsync(int groupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSchedule", ReplyAction="http://tempuri.org/IService/GetScheduleResponse")]
        ChipClient.ServiceReference.Schedule GetSchedule(ChipClient.ServiceReference.Group group, System.DayOfWeek day);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSchedule", ReplyAction="http://tempuri.org/IService/GetScheduleResponse")]
        System.Threading.Tasks.Task<ChipClient.ServiceReference.Schedule> GetScheduleAsync(ChipClient.ServiceReference.Group group, System.DayOfWeek day);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTeachers", ReplyAction="http://tempuri.org/IService/GetTeachersResponse")]
        ChipClient.ServiceReference.Teacher[] GetTeachers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTeachers", ReplyAction="http://tempuri.org/IService/GetTeachersResponse")]
        System.Threading.Tasks.Task<ChipClient.ServiceReference.Teacher[]> GetTeachersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetGroups", ReplyAction="http://tempuri.org/IService/GetGroupsResponse")]
        ChipClient.ServiceReference.Group[] GetGroups();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetGroups", ReplyAction="http://tempuri.org/IService/GetGroupsResponse")]
        System.Threading.Tasks.Task<ChipClient.ServiceReference.Group[]> GetGroupsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddGroup", ReplyAction="http://tempuri.org/IService/AddGroupResponse")]
        void AddGroup(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddGroup", ReplyAction="http://tempuri.org/IService/AddGroupResponse")]
        System.Threading.Tasks.Task AddGroupAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddTeacher", ReplyAction="http://tempuri.org/IService/AddTeacherResponse")]
        void AddTeacher(string name, string position);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddTeacher", ReplyAction="http://tempuri.org/IService/AddTeacherResponse")]
        System.Threading.Tasks.Task AddTeacherAsync(string name, string position);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddSubject", ReplyAction="http://tempuri.org/IService/AddSubjectResponse")]
        void AddSubject(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddSubject", ReplyAction="http://tempuri.org/IService/AddSubjectResponse")]
        System.Threading.Tasks.Task AddSubjectAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddLesson", ReplyAction="http://tempuri.org/IService/AddLessonResponse")]
        void AddLesson(int number, System.DateTime startTime, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddLesson", ReplyAction="http://tempuri.org/IService/AddLessonResponse")]
        System.Threading.Tasks.Task AddLessonAsync(int number, System.DateTime startTime, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddConcreteLesson", ReplyAction="http://tempuri.org/IService/AddConcreteLessonResponse")]
        void AddConcreteLesson(ChipClient.ServiceReference.Lesson lesson, ChipClient.ServiceReference.Subject subject, ChipClient.ServiceReference.Teacher teacher, ChipClient.ServiceReference.Room room);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddConcreteLesson", ReplyAction="http://tempuri.org/IService/AddConcreteLessonResponse")]
        System.Threading.Tasks.Task AddConcreteLessonAsync(ChipClient.ServiceReference.Lesson lesson, ChipClient.ServiceReference.Subject subject, ChipClient.ServiceReference.Teacher teacher, ChipClient.ServiceReference.Room room);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddRoom", ReplyAction="http://tempuri.org/IService/AddRoomResponse")]
        void AddRoom(string number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddRoom", ReplyAction="http://tempuri.org/IService/AddRoomResponse")]
        System.Threading.Tasks.Task AddRoomAsync(string number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddSchedule", ReplyAction="http://tempuri.org/IService/AddScheduleResponse")]
        void AddSchedule(ChipClient.ServiceReference.Group group, ChipClient.ServiceReference.ConcreteLesson[] lessons, System.DayOfWeek day);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddSchedule", ReplyAction="http://tempuri.org/IService/AddScheduleResponse")]
        System.Threading.Tasks.Task AddScheduleAsync(ChipClient.ServiceReference.Group group, ChipClient.ServiceReference.ConcreteLesson[] lessons, System.DayOfWeek day);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteGroup", ReplyAction="http://tempuri.org/IService/DeleteGroupResponse")]
        void DeleteGroup(int groupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteGroup", ReplyAction="http://tempuri.org/IService/DeleteGroupResponse")]
        System.Threading.Tasks.Task DeleteGroupAsync(int groupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteTeacher", ReplyAction="http://tempuri.org/IService/DeleteTeacherResponse")]
        void DeleteTeacher(int teacherId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteTeacher", ReplyAction="http://tempuri.org/IService/DeleteTeacherResponse")]
        System.Threading.Tasks.Task DeleteTeacherAsync(int teacherId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteSubject", ReplyAction="http://tempuri.org/IService/DeleteSubjectResponse")]
        void DeleteSubject(int subjectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteSubject", ReplyAction="http://tempuri.org/IService/DeleteSubjectResponse")]
        System.Threading.Tasks.Task DeleteSubjectAsync(int subjectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteSchedule", ReplyAction="http://tempuri.org/IService/DeleteScheduleResponse")]
        void DeleteSchedule(int scheduleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteSchedule", ReplyAction="http://tempuri.org/IService/DeleteScheduleResponse")]
        System.Threading.Tasks.Task DeleteScheduleAsync(int scheduleId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteLesson", ReplyAction="http://tempuri.org/IService/DeleteLessonResponse")]
        void DeleteLesson(int lessonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteLesson", ReplyAction="http://tempuri.org/IService/DeleteLessonResponse")]
        System.Threading.Tasks.Task DeleteLessonAsync(int lessonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteConcreteLesson", ReplyAction="http://tempuri.org/IService/DeleteConcreteLessonResponse")]
        void DeleteConcreteLesson(int lessonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteConcreteLesson", ReplyAction="http://tempuri.org/IService/DeleteConcreteLessonResponse")]
        System.Threading.Tasks.Task DeleteConcreteLessonAsync(int lessonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteRoom", ReplyAction="http://tempuri.org/IService/DeleteRoomResponse")]
        void DeleteRoom(int roomId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteRoom", ReplyAction="http://tempuri.org/IService/DeleteRoomResponse")]
        System.Threading.Tasks.Task DeleteRoomAsync(int roomId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : ChipClient.ServiceReference.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<ChipClient.ServiceReference.IService>, ChipClient.ServiceReference.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ChipClient.ServiceReference.Lesson[] GetLessons() {
            return base.Channel.GetLessons();
        }
        
        public System.Threading.Tasks.Task<ChipClient.ServiceReference.Lesson[]> GetLessonsAsync() {
            return base.Channel.GetLessonsAsync();
        }
        
        public ChipClient.ServiceReference.Room[] GetRooms() {
            return base.Channel.GetRooms();
        }
        
        public System.Threading.Tasks.Task<ChipClient.ServiceReference.Room[]> GetRoomsAsync() {
            return base.Channel.GetRoomsAsync();
        }
        
        public ChipClient.ServiceReference.Subject[] GetSubjects() {
            return base.Channel.GetSubjects();
        }
        
        public System.Threading.Tasks.Task<ChipClient.ServiceReference.Subject[]> GetSubjectsAsync() {
            return base.Channel.GetSubjectsAsync();
        }
        
        public ChipClient.ServiceReference.Schedule[] GetSchedules(int groupId) {
            return base.Channel.GetSchedules(groupId);
        }
        
        public System.Threading.Tasks.Task<ChipClient.ServiceReference.Schedule[]> GetSchedulesAsync(int groupId) {
            return base.Channel.GetSchedulesAsync(groupId);
        }
        
        public ChipClient.ServiceReference.Schedule GetSchedule(ChipClient.ServiceReference.Group group, System.DayOfWeek day) {
            return base.Channel.GetSchedule(group, day);
        }
        
        public System.Threading.Tasks.Task<ChipClient.ServiceReference.Schedule> GetScheduleAsync(ChipClient.ServiceReference.Group group, System.DayOfWeek day) {
            return base.Channel.GetScheduleAsync(group, day);
        }
        
        public ChipClient.ServiceReference.Teacher[] GetTeachers() {
            return base.Channel.GetTeachers();
        }
        
        public System.Threading.Tasks.Task<ChipClient.ServiceReference.Teacher[]> GetTeachersAsync() {
            return base.Channel.GetTeachersAsync();
        }
        
        public ChipClient.ServiceReference.Group[] GetGroups() {
            return base.Channel.GetGroups();
        }
        
        public System.Threading.Tasks.Task<ChipClient.ServiceReference.Group[]> GetGroupsAsync() {
            return base.Channel.GetGroupsAsync();
        }
        
        public void AddGroup(string name) {
            base.Channel.AddGroup(name);
        }
        
        public System.Threading.Tasks.Task AddGroupAsync(string name) {
            return base.Channel.AddGroupAsync(name);
        }
        
        public void AddTeacher(string name, string position) {
            base.Channel.AddTeacher(name, position);
        }
        
        public System.Threading.Tasks.Task AddTeacherAsync(string name, string position) {
            return base.Channel.AddTeacherAsync(name, position);
        }
        
        public void AddSubject(string name) {
            base.Channel.AddSubject(name);
        }
        
        public System.Threading.Tasks.Task AddSubjectAsync(string name) {
            return base.Channel.AddSubjectAsync(name);
        }
        
        public void AddLesson(int number, System.DateTime startTime, System.DateTime endTime) {
            base.Channel.AddLesson(number, startTime, endTime);
        }
        
        public System.Threading.Tasks.Task AddLessonAsync(int number, System.DateTime startTime, System.DateTime endTime) {
            return base.Channel.AddLessonAsync(number, startTime, endTime);
        }
        
        public void AddConcreteLesson(ChipClient.ServiceReference.Lesson lesson, ChipClient.ServiceReference.Subject subject, ChipClient.ServiceReference.Teacher teacher, ChipClient.ServiceReference.Room room) {
            base.Channel.AddConcreteLesson(lesson, subject, teacher, room);
        }
        
        public System.Threading.Tasks.Task AddConcreteLessonAsync(ChipClient.ServiceReference.Lesson lesson, ChipClient.ServiceReference.Subject subject, ChipClient.ServiceReference.Teacher teacher, ChipClient.ServiceReference.Room room) {
            return base.Channel.AddConcreteLessonAsync(lesson, subject, teacher, room);
        }
        
        public void AddRoom(string number) {
            base.Channel.AddRoom(number);
        }
        
        public System.Threading.Tasks.Task AddRoomAsync(string number) {
            return base.Channel.AddRoomAsync(number);
        }
        
        public void AddSchedule(ChipClient.ServiceReference.Group group, ChipClient.ServiceReference.ConcreteLesson[] lessons, System.DayOfWeek day) {
            base.Channel.AddSchedule(group, lessons, day);
        }
        
        public System.Threading.Tasks.Task AddScheduleAsync(ChipClient.ServiceReference.Group group, ChipClient.ServiceReference.ConcreteLesson[] lessons, System.DayOfWeek day) {
            return base.Channel.AddScheduleAsync(group, lessons, day);
        }
        
        public void DeleteGroup(int groupId) {
            base.Channel.DeleteGroup(groupId);
        }
        
        public System.Threading.Tasks.Task DeleteGroupAsync(int groupId) {
            return base.Channel.DeleteGroupAsync(groupId);
        }
        
        public void DeleteTeacher(int teacherId) {
            base.Channel.DeleteTeacher(teacherId);
        }
        
        public System.Threading.Tasks.Task DeleteTeacherAsync(int teacherId) {
            return base.Channel.DeleteTeacherAsync(teacherId);
        }
        
        public void DeleteSubject(int subjectId) {
            base.Channel.DeleteSubject(subjectId);
        }
        
        public System.Threading.Tasks.Task DeleteSubjectAsync(int subjectId) {
            return base.Channel.DeleteSubjectAsync(subjectId);
        }
        
        public void DeleteSchedule(int scheduleId) {
            base.Channel.DeleteSchedule(scheduleId);
        }
        
        public System.Threading.Tasks.Task DeleteScheduleAsync(int scheduleId) {
            return base.Channel.DeleteScheduleAsync(scheduleId);
        }
        
        public void DeleteLesson(int lessonId) {
            base.Channel.DeleteLesson(lessonId);
        }
        
        public System.Threading.Tasks.Task DeleteLessonAsync(int lessonId) {
            return base.Channel.DeleteLessonAsync(lessonId);
        }
        
        public void DeleteConcreteLesson(int lessonId) {
            base.Channel.DeleteConcreteLesson(lessonId);
        }
        
        public System.Threading.Tasks.Task DeleteConcreteLessonAsync(int lessonId) {
            return base.Channel.DeleteConcreteLessonAsync(lessonId);
        }
        
        public void DeleteRoom(int roomId) {
            base.Channel.DeleteRoom(roomId);
        }
        
        public System.Threading.Tasks.Task DeleteRoomAsync(int roomId) {
            return base.Channel.DeleteRoomAsync(roomId);
        }
    }
}
