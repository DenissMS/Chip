//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.34014
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ChipWebClient.ServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference.IService")]
    public interface IService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLesson", ReplyAction="http://tempuri.org/IService/GetLessonResponse")]
        Chip.Lesson GetLesson(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLesson", ReplyAction="http://tempuri.org/IService/GetLessonResponse")]
        System.Threading.Tasks.Task<Chip.Lesson> GetLessonAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLessons", ReplyAction="http://tempuri.org/IService/GetLessonsResponse")]
        Chip.Lesson[] GetLessons();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetLessons", ReplyAction="http://tempuri.org/IService/GetLessonsResponse")]
        System.Threading.Tasks.Task<Chip.Lesson[]> GetLessonsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetRoom", ReplyAction="http://tempuri.org/IService/GetRoomResponse")]
        Chip.Room GetRoom(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetRoom", ReplyAction="http://tempuri.org/IService/GetRoomResponse")]
        System.Threading.Tasks.Task<Chip.Room> GetRoomAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetRooms", ReplyAction="http://tempuri.org/IService/GetRoomsResponse")]
        Chip.Room[] GetRooms();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetRooms", ReplyAction="http://tempuri.org/IService/GetRoomsResponse")]
        System.Threading.Tasks.Task<Chip.Room[]> GetRoomsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSubject", ReplyAction="http://tempuri.org/IService/GetSubjectResponse")]
        Chip.Subject GetSubject(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSubject", ReplyAction="http://tempuri.org/IService/GetSubjectResponse")]
        System.Threading.Tasks.Task<Chip.Subject> GetSubjectAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSubjects", ReplyAction="http://tempuri.org/IService/GetSubjectsResponse")]
        Chip.Subject[] GetSubjects();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSubjects", ReplyAction="http://tempuri.org/IService/GetSubjectsResponse")]
        System.Threading.Tasks.Task<Chip.Subject[]> GetSubjectsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSchedules", ReplyAction="http://tempuri.org/IService/GetSchedulesResponse")]
        Chip.Schedule[] GetSchedules(int groupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSchedules", ReplyAction="http://tempuri.org/IService/GetSchedulesResponse")]
        System.Threading.Tasks.Task<Chip.Schedule[]> GetSchedulesAsync(int groupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSchedule", ReplyAction="http://tempuri.org/IService/GetScheduleResponse")]
        Chip.Schedule GetSchedule(int groupId, System.DayOfWeek day);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetSchedule", ReplyAction="http://tempuri.org/IService/GetScheduleResponse")]
        System.Threading.Tasks.Task<Chip.Schedule> GetScheduleAsync(int groupId, System.DayOfWeek day);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetFinalizedSchedule", ReplyAction="http://tempuri.org/IService/GetFinalizedScheduleResponse")]
        Chip.Schedule GetFinalizedSchedule(Chip.Schedule schedule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetFinalizedSchedule", ReplyAction="http://tempuri.org/IService/GetFinalizedScheduleResponse")]
        System.Threading.Tasks.Task<Chip.Schedule> GetFinalizedScheduleAsync(Chip.Schedule schedule);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTeacher", ReplyAction="http://tempuri.org/IService/GetTeacherResponse")]
        Chip.Teacher GetTeacher(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTeacher", ReplyAction="http://tempuri.org/IService/GetTeacherResponse")]
        System.Threading.Tasks.Task<Chip.Teacher> GetTeacherAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTeachers", ReplyAction="http://tempuri.org/IService/GetTeachersResponse")]
        Chip.Teacher[] GetTeachers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetTeachers", ReplyAction="http://tempuri.org/IService/GetTeachersResponse")]
        System.Threading.Tasks.Task<Chip.Teacher[]> GetTeachersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetGroup", ReplyAction="http://tempuri.org/IService/GetGroupResponse")]
        Chip.Group GetGroup(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetGroup", ReplyAction="http://tempuri.org/IService/GetGroupResponse")]
        System.Threading.Tasks.Task<Chip.Group> GetGroupAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetGroups", ReplyAction="http://tempuri.org/IService/GetGroupsResponse")]
        Chip.Group[] GetGroups();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/GetGroups", ReplyAction="http://tempuri.org/IService/GetGroupsResponse")]
        System.Threading.Tasks.Task<Chip.Group[]> GetGroupsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddSchedule", ReplyAction="http://tempuri.org/IService/AddScheduleResponse")]
        void AddSchedule(int groupId, Chip.ConcreteLesson[] lessons, System.DayOfWeek day);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddSchedule", ReplyAction="http://tempuri.org/IService/AddScheduleResponse")]
        System.Threading.Tasks.Task AddScheduleAsync(int groupId, Chip.ConcreteLesson[] lessons, System.DayOfWeek day);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddGroup", ReplyAction="http://tempuri.org/IService/AddGroupResponse")]
        void AddGroup(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddGroup", ReplyAction="http://tempuri.org/IService/AddGroupResponse")]
        System.Threading.Tasks.Task AddGroupAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddTeacher", ReplyAction="http://tempuri.org/IService/AddTeacherResponse")]
        void AddTeacher(string name, string position);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddTeacher", ReplyAction="http://tempuri.org/IService/AddTeacherResponse")]
        System.Threading.Tasks.Task AddTeacherAsync(string name, string position);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddSubject", ReplyAction="http://tempuri.org/IService/AddSubjectResponse")]
        void AddSubject(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddSubject", ReplyAction="http://tempuri.org/IService/AddSubjectResponse")]
        System.Threading.Tasks.Task AddSubjectAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddLesson", ReplyAction="http://tempuri.org/IService/AddLessonResponse")]
        void AddLesson(int number, System.DateTime startTime, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddLesson", ReplyAction="http://tempuri.org/IService/AddLessonResponse")]
        System.Threading.Tasks.Task AddLessonAsync(int number, System.DateTime startTime, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddConcreteLesson", ReplyAction="http://tempuri.org/IService/AddConcreteLessonResponse")]
        void AddConcreteLesson(int scheduleId, int lessonId, int subjectId, int teacherId, int roomId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddConcreteLesson", ReplyAction="http://tempuri.org/IService/AddConcreteLessonResponse")]
        System.Threading.Tasks.Task AddConcreteLessonAsync(int scheduleId, int lessonId, int subjectId, int teacherId, int roomId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddRoom", ReplyAction="http://tempuri.org/IService/AddRoomResponse")]
        void AddRoom(string number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/AddRoom", ReplyAction="http://tempuri.org/IService/AddRoomResponse")]
        System.Threading.Tasks.Task AddRoomAsync(string number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EditGroup", ReplyAction="http://tempuri.org/IService/EditGroupResponse")]
        void EditGroup(int id, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EditGroup", ReplyAction="http://tempuri.org/IService/EditGroupResponse")]
        System.Threading.Tasks.Task EditGroupAsync(int id, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EditTeacher", ReplyAction="http://tempuri.org/IService/EditTeacherResponse")]
        void EditTeacher(int id, string name, string position);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EditTeacher", ReplyAction="http://tempuri.org/IService/EditTeacherResponse")]
        System.Threading.Tasks.Task EditTeacherAsync(int id, string name, string position);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EditSubject", ReplyAction="http://tempuri.org/IService/EditSubjectResponse")]
        void EditSubject(int id, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EditSubject", ReplyAction="http://tempuri.org/IService/EditSubjectResponse")]
        System.Threading.Tasks.Task EditSubjectAsync(int id, string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EditLesson", ReplyAction="http://tempuri.org/IService/EditLessonResponse")]
        void EditLesson(int id, int number, System.DateTime startTime, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EditLesson", ReplyAction="http://tempuri.org/IService/EditLessonResponse")]
        System.Threading.Tasks.Task EditLessonAsync(int id, int number, System.DateTime startTime, System.DateTime endTime);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EditRoom", ReplyAction="http://tempuri.org/IService/EditRoomResponse")]
        void EditRoom(int id, string number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/EditRoom", ReplyAction="http://tempuri.org/IService/EditRoomResponse")]
        System.Threading.Tasks.Task EditRoomAsync(int id, string number);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteGroup", ReplyAction="http://tempuri.org/IService/DeleteGroupResponse")]
        void DeleteGroup(int groupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteGroup", ReplyAction="http://tempuri.org/IService/DeleteGroupResponse")]
        System.Threading.Tasks.Task DeleteGroupAsync(int groupId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteTeacher", ReplyAction="http://tempuri.org/IService/DeleteTeacherResponse")]
        void DeleteTeacher(int teacherId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteTeacher", ReplyAction="http://tempuri.org/IService/DeleteTeacherResponse")]
        System.Threading.Tasks.Task DeleteTeacherAsync(int teacherId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteSubject", ReplyAction="http://tempuri.org/IService/DeleteSubjectResponse")]
        void DeleteSubject(int subjectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteSubject", ReplyAction="http://tempuri.org/IService/DeleteSubjectResponse")]
        System.Threading.Tasks.Task DeleteSubjectAsync(int subjectId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteSchedule", ReplyAction="http://tempuri.org/IService/DeleteScheduleResponse")]
        void DeleteSchedule(int groupId, System.DayOfWeek day);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteSchedule", ReplyAction="http://tempuri.org/IService/DeleteScheduleResponse")]
        System.Threading.Tasks.Task DeleteScheduleAsync(int groupId, System.DayOfWeek day);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteLesson", ReplyAction="http://tempuri.org/IService/DeleteLessonResponse")]
        void DeleteLesson(int lessonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteLesson", ReplyAction="http://tempuri.org/IService/DeleteLessonResponse")]
        System.Threading.Tasks.Task DeleteLessonAsync(int lessonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteConcreteLesson", ReplyAction="http://tempuri.org/IService/DeleteConcreteLessonResponse")]
        void DeleteConcreteLesson(int lessonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteConcreteLesson", ReplyAction="http://tempuri.org/IService/DeleteConcreteLessonResponse")]
        System.Threading.Tasks.Task DeleteConcreteLessonAsync(int lessonId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteRoom", ReplyAction="http://tempuri.org/IService/DeleteRoomResponse")]
        void DeleteRoom(int roomId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IService/DeleteRoom", ReplyAction="http://tempuri.org/IService/DeleteRoomResponse")]
        System.Threading.Tasks.Task DeleteRoomAsync(int roomId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IServiceChannel : ChipWebClient.ServiceReference.IService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ServiceClient : System.ServiceModel.ClientBase<ChipWebClient.ServiceReference.IService>, ChipWebClient.ServiceReference.IService {
        
        public ServiceClient() {
        }
        
        public ServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Chip.Lesson GetLesson(int id) {
            return base.Channel.GetLesson(id);
        }
        
        public System.Threading.Tasks.Task<Chip.Lesson> GetLessonAsync(int id) {
            return base.Channel.GetLessonAsync(id);
        }
        
        public Chip.Lesson[] GetLessons() {
            return base.Channel.GetLessons();
        }
        
        public System.Threading.Tasks.Task<Chip.Lesson[]> GetLessonsAsync() {
            return base.Channel.GetLessonsAsync();
        }
        
        public Chip.Room GetRoom(int id) {
            return base.Channel.GetRoom(id);
        }
        
        public System.Threading.Tasks.Task<Chip.Room> GetRoomAsync(int id) {
            return base.Channel.GetRoomAsync(id);
        }
        
        public Chip.Room[] GetRooms() {
            return base.Channel.GetRooms();
        }
        
        public System.Threading.Tasks.Task<Chip.Room[]> GetRoomsAsync() {
            return base.Channel.GetRoomsAsync();
        }
        
        public Chip.Subject GetSubject(int id) {
            return base.Channel.GetSubject(id);
        }
        
        public System.Threading.Tasks.Task<Chip.Subject> GetSubjectAsync(int id) {
            return base.Channel.GetSubjectAsync(id);
        }
        
        public Chip.Subject[] GetSubjects() {
            return base.Channel.GetSubjects();
        }
        
        public System.Threading.Tasks.Task<Chip.Subject[]> GetSubjectsAsync() {
            return base.Channel.GetSubjectsAsync();
        }
        
        public Chip.Schedule[] GetSchedules(int groupId) {
            return base.Channel.GetSchedules(groupId);
        }
        
        public System.Threading.Tasks.Task<Chip.Schedule[]> GetSchedulesAsync(int groupId) {
            return base.Channel.GetSchedulesAsync(groupId);
        }
        
        public Chip.Schedule GetSchedule(int groupId, System.DayOfWeek day) {
            return base.Channel.GetSchedule(groupId, day);
        }
        
        public System.Threading.Tasks.Task<Chip.Schedule> GetScheduleAsync(int groupId, System.DayOfWeek day) {
            return base.Channel.GetScheduleAsync(groupId, day);
        }
        
        public Chip.Schedule GetFinalizedSchedule(Chip.Schedule schedule) {
            return base.Channel.GetFinalizedSchedule(schedule);
        }
        
        public System.Threading.Tasks.Task<Chip.Schedule> GetFinalizedScheduleAsync(Chip.Schedule schedule) {
            return base.Channel.GetFinalizedScheduleAsync(schedule);
        }
        
        public Chip.Teacher GetTeacher(int id) {
            return base.Channel.GetTeacher(id);
        }
        
        public System.Threading.Tasks.Task<Chip.Teacher> GetTeacherAsync(int id) {
            return base.Channel.GetTeacherAsync(id);
        }
        
        public Chip.Teacher[] GetTeachers() {
            return base.Channel.GetTeachers();
        }
        
        public System.Threading.Tasks.Task<Chip.Teacher[]> GetTeachersAsync() {
            return base.Channel.GetTeachersAsync();
        }
        
        public Chip.Group GetGroup(int id) {
            return base.Channel.GetGroup(id);
        }
        
        public System.Threading.Tasks.Task<Chip.Group> GetGroupAsync(int id) {
            return base.Channel.GetGroupAsync(id);
        }
        
        public Chip.Group[] GetGroups() {
            return base.Channel.GetGroups();
        }
        
        public System.Threading.Tasks.Task<Chip.Group[]> GetGroupsAsync() {
            return base.Channel.GetGroupsAsync();
        }
        
        public void AddSchedule(int groupId, Chip.ConcreteLesson[] lessons, System.DayOfWeek day) {
            base.Channel.AddSchedule(groupId, lessons, day);
        }
        
        public System.Threading.Tasks.Task AddScheduleAsync(int groupId, Chip.ConcreteLesson[] lessons, System.DayOfWeek day) {
            return base.Channel.AddScheduleAsync(groupId, lessons, day);
        }
        
        public void AddGroup(string name) {
            base.Channel.AddGroup(name);
        }
        
        public System.Threading.Tasks.Task AddGroupAsync(string name) {
            return base.Channel.AddGroupAsync(name);
        }
        
        public void AddTeacher(string name, string position) {
            base.Channel.AddTeacher(name, position);
        }
        
        public System.Threading.Tasks.Task AddTeacherAsync(string name, string position) {
            return base.Channel.AddTeacherAsync(name, position);
        }
        
        public void AddSubject(string name) {
            base.Channel.AddSubject(name);
        }
        
        public System.Threading.Tasks.Task AddSubjectAsync(string name) {
            return base.Channel.AddSubjectAsync(name);
        }
        
        public void AddLesson(int number, System.DateTime startTime, System.DateTime endTime) {
            base.Channel.AddLesson(number, startTime, endTime);
        }
        
        public System.Threading.Tasks.Task AddLessonAsync(int number, System.DateTime startTime, System.DateTime endTime) {
            return base.Channel.AddLessonAsync(number, startTime, endTime);
        }
        
        public void AddConcreteLesson(int scheduleId, int lessonId, int subjectId, int teacherId, int roomId) {
            base.Channel.AddConcreteLesson(scheduleId, lessonId, subjectId, teacherId, roomId);
        }
        
        public System.Threading.Tasks.Task AddConcreteLessonAsync(int scheduleId, int lessonId, int subjectId, int teacherId, int roomId) {
            return base.Channel.AddConcreteLessonAsync(scheduleId, lessonId, subjectId, teacherId, roomId);
        }
        
        public void AddRoom(string number) {
            base.Channel.AddRoom(number);
        }
        
        public System.Threading.Tasks.Task AddRoomAsync(string number) {
            return base.Channel.AddRoomAsync(number);
        }
        
        public void EditGroup(int id, string name) {
            base.Channel.EditGroup(id, name);
        }
        
        public System.Threading.Tasks.Task EditGroupAsync(int id, string name) {
            return base.Channel.EditGroupAsync(id, name);
        }
        
        public void EditTeacher(int id, string name, string position) {
            base.Channel.EditTeacher(id, name, position);
        }
        
        public System.Threading.Tasks.Task EditTeacherAsync(int id, string name, string position) {
            return base.Channel.EditTeacherAsync(id, name, position);
        }
        
        public void EditSubject(int id, string name) {
            base.Channel.EditSubject(id, name);
        }
        
        public System.Threading.Tasks.Task EditSubjectAsync(int id, string name) {
            return base.Channel.EditSubjectAsync(id, name);
        }
        
        public void EditLesson(int id, int number, System.DateTime startTime, System.DateTime endTime) {
            base.Channel.EditLesson(id, number, startTime, endTime);
        }
        
        public System.Threading.Tasks.Task EditLessonAsync(int id, int number, System.DateTime startTime, System.DateTime endTime) {
            return base.Channel.EditLessonAsync(id, number, startTime, endTime);
        }
        
        public void EditRoom(int id, string number) {
            base.Channel.EditRoom(id, number);
        }
        
        public System.Threading.Tasks.Task EditRoomAsync(int id, string number) {
            return base.Channel.EditRoomAsync(id, number);
        }
        
        public void DeleteGroup(int groupId) {
            base.Channel.DeleteGroup(groupId);
        }
        
        public System.Threading.Tasks.Task DeleteGroupAsync(int groupId) {
            return base.Channel.DeleteGroupAsync(groupId);
        }
        
        public void DeleteTeacher(int teacherId) {
            base.Channel.DeleteTeacher(teacherId);
        }
        
        public System.Threading.Tasks.Task DeleteTeacherAsync(int teacherId) {
            return base.Channel.DeleteTeacherAsync(teacherId);
        }
        
        public void DeleteSubject(int subjectId) {
            base.Channel.DeleteSubject(subjectId);
        }
        
        public System.Threading.Tasks.Task DeleteSubjectAsync(int subjectId) {
            return base.Channel.DeleteSubjectAsync(subjectId);
        }
        
        public void DeleteSchedule(int groupId, System.DayOfWeek day) {
            base.Channel.DeleteSchedule(groupId, day);
        }
        
        public System.Threading.Tasks.Task DeleteScheduleAsync(int groupId, System.DayOfWeek day) {
            return base.Channel.DeleteScheduleAsync(groupId, day);
        }
        
        public void DeleteLesson(int lessonId) {
            base.Channel.DeleteLesson(lessonId);
        }
        
        public System.Threading.Tasks.Task DeleteLessonAsync(int lessonId) {
            return base.Channel.DeleteLessonAsync(lessonId);
        }
        
        public void DeleteConcreteLesson(int lessonId) {
            base.Channel.DeleteConcreteLesson(lessonId);
        }
        
        public System.Threading.Tasks.Task DeleteConcreteLessonAsync(int lessonId) {
            return base.Channel.DeleteConcreteLessonAsync(lessonId);
        }
        
        public void DeleteRoom(int roomId) {
            base.Channel.DeleteRoom(roomId);
        }
        
        public System.Threading.Tasks.Task DeleteRoomAsync(int roomId) {
            return base.Channel.DeleteRoomAsync(roomId);
        }
    }
}
